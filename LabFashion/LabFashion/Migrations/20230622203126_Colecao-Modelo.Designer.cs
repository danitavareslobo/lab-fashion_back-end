// <auto-generated />
using System;
using LabFashion.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LabFashion.Migrations
{
    [DbContext(typeof(LabFashionContext))]
    [Migration("20230622203126_Colecao-Modelo")]
    partial class ColecaoModelo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LabFashion.Models.Colecao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AnoLancamento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Estacao")
                        .HasColumnType("int");

                    b.Property<int>("EstadoSistema")
                        .HasColumnType("int");

                    b.Property<int>("IdResponsavel")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NomeColecao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Orcamento")
                        .HasMaxLength(21)
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdResponsavel")
                        .IsUnique();

                    b.ToTable("Colecoes");
                });

            modelBuilder.Entity("LabFashion.Models.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdColecaoRelacionada")
                        .HasColumnType("int");

                    b.Property<int>("Layout")
                        .HasColumnType("int");

                    b.Property<string>("NomeModelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdColecaoRelacionada");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("LabFashion.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CpfCnpj = "000.000.000.-00",
                            DataNascimento = new DateTime(1990, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "diego@audaces.com",
                            Genero = "M",
                            NomeCompleto = "Diego Lobo",
                            Status = 2,
                            Telefone = "9999-9999",
                            TipoUsuario = 1
                        },
                        new
                        {
                            Id = 2,
                            CpfCnpj = "111.111.111.11",
                            DataNascimento = new DateTime(1989, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "daniele@audaces.com",
                            Genero = "F",
                            NomeCompleto = "Daniele Lobo",
                            Status = 1,
                            Telefone = "8888-8888",
                            TipoUsuario = 1
                        },
                        new
                        {
                            Id = 3,
                            CpfCnpj = "222.222.222-22",
                            DataNascimento = new DateTime(1995, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "marcella@audaces.com",
                            Genero = "F",
                            NomeCompleto = "Marcella Lobo",
                            Status = 2,
                            Telefone = "7777-7777",
                            TipoUsuario = 3
                        },
                        new
                        {
                            Id = 4,
                            CpfCnpj = "333.333.333-33",
                            DataNascimento = new DateTime(1994, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "isabelle@audaces.com",
                            Genero = "F",
                            NomeCompleto = "Isabelle Tavares",
                            Status = 1,
                            Telefone = "6666-6666",
                            TipoUsuario = 3
                        },
                        new
                        {
                            Id = 5,
                            CpfCnpj = "444.444.444-44",
                            DataNascimento = new DateTime(1993, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "gustavo@audaces.com",
                            Genero = "M",
                            NomeCompleto = "Gustavo Tavares",
                            Status = 2,
                            Telefone = "5555-5555",
                            TipoUsuario = 2
                        },
                        new
                        {
                            Id = 6,
                            CpfCnpj = "555.555.555-55",
                            DataNascimento = new DateTime(1992, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "enrico@audaces.com",
                            Genero = "M",
                            NomeCompleto = "Enrico Tavares",
                            Status = 1,
                            Telefone = "4444-4444",
                            TipoUsuario = 2
                        });
                });

            modelBuilder.Entity("LabFashion.Models.Colecao", b =>
                {
                    b.HasOne("LabFashion.Models.Usuario", "Usuario")
                        .WithOne("Colecao")
                        .HasForeignKey("LabFashion.Models.Colecao", "IdResponsavel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LabFashion.Models.Modelo", b =>
                {
                    b.HasOne("LabFashion.Models.Colecao", "Colecao")
                        .WithMany("Modelos")
                        .HasForeignKey("IdColecaoRelacionada")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colecao");
                });

            modelBuilder.Entity("LabFashion.Models.Colecao", b =>
                {
                    b.Navigation("Modelos");
                });

            modelBuilder.Entity("LabFashion.Models.Usuario", b =>
                {
                    b.Navigation("Colecao")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
